<HTML>
<HEAD>
<TITLE>The USBISO Sample</TITLE>
</HEAD>
<BODY>

<H2>The USBISO Sample</H2>
<P>The USBISO Sample accompanies Chapter 12 and illustrates how to program an isochronous endpoint.</P>
<P>The sample includes three components:</P>

<UL>
<LI>USBISO.SYS (SYS subdirectory) is a WDM driver for a USB device based on the Anchor Chips development board. </LI>
<LI>TEST.EXE (TEST subdirectory) is a Win32 console application for testing USBISO.SYS. </LI>
<LI>USBISO.HEX (EZUSB subdirectory) is the firmware image for the USBISO device.</LI></UL>

<H3>Building USBISO</H3>
<P>To build USBISO.SYS, follow the <A HREF="../../wdmbook.htm#wdmbuild">general instructions for building a WDM sample</A>. The Microsoft Visual C++ project file is named USBISO.DSP in the SYS subdirectory.</P>
<P>To build TEST.EXE, follow the <A HREF="../../wdmbook.htm#usermodebuild">general instructions for building user-mode programs</A>. The Microsoft Visual C++ project file is named TEST.DSP in the TEST subdirectory.</P>
<H3>Testing USBISO</H3>
<P>First follow the <A HREF="../../wdmbook.htm#usbtest">general instructions for testing USB samples</A> to install the device firmware (USBISO.HEX in the EZUSB subdirectory) and the driver. Then open a command prompt and run TEST.EXE from the TEST\DEBUG subdirectory. TEST will read from the device’s isochronous endpoint and report the data, which should consist in rows of increasing hexadecimal numbers. (The numbers are actually the low-order 8 bits of the frame numbers within which the data were sent.)</P>

<h3>Special note about power management</h3>
<p>This driver doesn't automatically repower the device when the computer comes out of standby. I recommend not putting the computer through a power cycle with this device connected.
A more realistic driver would establish some sort of policy about when the device should be powered and would use techinques like shown in the <a href="../../chap8/wakeup/wakeup.htm">WAKEUP</a>
sample to enforce that policy.</p>

<h3>What to look for</h3>
<p>The basic function in this sample is <b>DispatchRead</b> (ReadWrite.cpp). Read the book prose
carefully to see how this driver copes with cancellation of the main IRP while one or more
subsidiary IRPs are outstanding.</p>

</BODY>
</HTML>
