<HTML>
<HEAD>
</HEAD>
<BODY>

<H2>The PNPMON Sample</H2>
<P>The PNPMON Sample accompanies Chapter 6 and illustrates how to intercept Plug and Play events in kernel mode. It also incidentally illustrates how to dynamically load a kernel-mode driver from a user-mode application and how to call NT kernel services from a Windows 98/Me VxD.</P>
<P>The sample includes three components:</P>

<UL>
<LI>TEST.EXE (TEST subdirectory) is a user-mode test program for PNPMON.SYS and PNPMON.VXD. </LI>
<LI>PNPMON.SYS (SYS subdirectory) is a kernel-mode driver that doesn’t service any hardware at all. It extends the operating system for the benefit of the TEST application under Windows XP. </LI>
<LI>PNPMON.VXD (VXD subdirectory) is a virtual device driver (a VxD) that doesn’t service any hardware at all. It extends the operating system for the benefit of the TEST application under Windows 98/Me.</LI></UL>

<H3>Building PNPMON</H3>
<P>To build PNPMON.SYS, follow the <A HREF="../../wdmbook.htm#wdmbuild">general instructions for building a WDM sample</A>. The Microsoft Visual C++ project file is named PNPMON.DSP in the SYS subdirectory.</P>
</I><P>To build PNPMON.VXD, open the Microsoft Visual C++ project named PNPMON in the VXD subdirectory. Select the Build command from the Build menu. The build script depends on your having set the 98/MeDDK environment variable to the directory where you installed the Windows 98/Me DDK. Depending on which version of the DDK you have, you may need to adjust the include or library paths in the project settings.</P>
<P>To build TEST.EXE, follow the <A HREF="../../wdmbook.htm#usermodebuild">general instructions for building user-mode programs</A>. The Microsoft Visual C++ project file is named TEST.DSP in the TEST subdirectory.</P>
<H3>Testing PNPMON</H3>
<P>If you're testing in Windows 98/Me, and if you built the PNPMON.VXD project, the build script will have copied PNPMON.VXD to your system directory. If you didn't perform a build, you should copy PNPMON.VXD from the VXD\DEBUG subdirectory to the system directory by hand.</P>
<P>If you're testing in Windows XP, and if you built the PNPMON.SYS project, the build script will have copied PNPMON.SYS to your Drivers directory. If you didn't perform a build, you should copy PNPMON.SYS from the sys\objchk_wxp_x86\i386 subdirectory to the Drivers directory by hand.</P>
<P>Launch the TEST.EXE program from the TEST\DEBUG subdirectory. TEST will present a simple dialog box with the title "PnP Kernel-Mode Notification Monitor". You should also have the TEST program for the <A HREF="../pnpevent/pnpevent.htm">PNPEVENT sample</A> simultaneously active.</P>
<P>Follow the PNPEVENT testing instructions and notice that the PNPMON\TEST program also logs messages about PnP events. These events are being collected by the kernel-mode driver (PNPMON.SYS or PNPMON.VXD, depending on which platform you use for testing) and retrieved by TEST.</P>
<P>In Windows XP only, you can try an additional test. With both test programs active and a PNPEVENT device in the system, press the Send Event button in PNPEVENT\TEST’s dialog. The button causes PNPEVENT.SYS to send a custom PnP notification via IoReportTargetDeviceChangeAsynchronous. Target device changing reporting is not supported in Windows 98/Me, so the button has no effect there.</P>

<h3>What to look for</h3>
<p>There are three interesting things in this sample:</p>
<ul>
<li><b>Kernel-mode PnP notifications:</b> Look at the file <b>control.cpp</b> in the <b>sys</b>
directory, with particular attention to the functions named <b>Register</b>, <b>Deregister</b>,
and <b>OnPnpNotify</b>.
<li><b>Dynamically loading a driver:</b> Look at <b>helper.cpp</b> in the <b>test</b> directory. Note
also that the <b>DriverEntry</b> routine in the driver creates a device object and does <i>not</i>
set an <b>AddDevice</b> pointer in the DRIVER_OBJECT -- this makes PNPMON.SYS a legacy driver instead
of a WDM driver.
<li><b>Calling WDM from a VxD:</b> Check out <b>pnpmon.cpp</b> in the <b>vxd</b> directory, which
mixes VxD and WDM system calls. In order to call WDM, the VxD links with <b>wdmvxd.clb</b> from the
Windows 98 DDK.
</ul>

</BODY>
</HTML>
